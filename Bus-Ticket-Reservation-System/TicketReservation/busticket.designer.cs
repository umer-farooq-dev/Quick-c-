#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Testing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name= "BusTicketReserveDB")]
	public partial class busticketDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTrip(Trip instance);
    partial void UpdateTrip(Trip instance);
    partial void DeleteTrip(Trip instance);
    #endregion
		
		public busticketDataContext() : 
				base(global::TicketReservation.Properties.Settings.Default.BusTicketReserveConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public busticketDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public busticketDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public busticketDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public busticketDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Trip> Trips
		{
			get
			{
				return this.GetTable<Trip>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _age;
		
		private string _gender;
		
		private string _contactno;
		
		private string _email;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OncontactnoChanging(string value);
    partial void OncontactnoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="VarChar(50)")]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="VarChar(50)")]
		public string contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this.OncontactnoChanging(value);
					this.SendPropertyChanging();
					this._contactno = value;
					this.SendPropertyChanged("contactno");
					this.OncontactnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trip")]
	public partial class Trip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _id;
		
		private string _busName;
		
		private string _route;
		
		private string _category;
		
		private string _schedual;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _A1;
		
		private string _A2;
		
		private string _A3;
		
		private string _A4;
		
		private string _B1;
		
		private string _B2;
		
		private string _B3;
		
		private string _B4;
		
		private string _C1;
		
		private string _C2;
		
		private string _C3;
		
		private string _C4;
		
		private string _D1;
		
		private string _D2;
		
		private string _D3;
		
		private string _D4;
		
		private string _E1;
		
		private string _E2;
		
		private string _E3;
		
		private string _E4;
		
		private string _rent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(decimal value);
    partial void OnidChanged();
    partial void OnbusNameChanging(string value);
    partial void OnbusNameChanged();
    partial void OnrouteChanging(string value);
    partial void OnrouteChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnschedualChanging(string value);
    partial void OnschedualChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnA1Changing(string value);
    partial void OnA1Changed();
    partial void OnA2Changing(string value);
    partial void OnA2Changed();
    partial void OnA3Changing(string value);
    partial void OnA3Changed();
    partial void OnA4Changing(string value);
    partial void OnA4Changed();
    partial void OnB1Changing(string value);
    partial void OnB1Changed();
    partial void OnB2Changing(string value);
    partial void OnB2Changed();
    partial void OnB3Changing(string value);
    partial void OnB3Changed();
    partial void OnB4Changing(string value);
    partial void OnB4Changed();
    partial void OnC1Changing(string value);
    partial void OnC1Changed();
    partial void OnC2Changing(string value);
    partial void OnC2Changed();
    partial void OnC3Changing(string value);
    partial void OnC3Changed();
    partial void OnC4Changing(string value);
    partial void OnC4Changed();
    partial void OnD1Changing(string value);
    partial void OnD1Changed();
    partial void OnD2Changing(string value);
    partial void OnD2Changed();
    partial void OnD3Changing(string value);
    partial void OnD3Changed();
    partial void OnD4Changing(string value);
    partial void OnD4Changed();
    partial void OnE1Changing(string value);
    partial void OnE1Changed();
    partial void OnE2Changing(string value);
    partial void OnE2Changed();
    partial void OnE3Changing(string value);
    partial void OnE3Changed();
    partial void OnE4Changing(string value);
    partial void OnE4Changed();
    partial void OnrentChanging(string value);
    partial void OnrentChanged();
    #endregion
		
		public Trip()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_busName", DbType="VarChar(50)")]
		public string busName
		{
			get
			{
				return this._busName;
			}
			set
			{
				if ((this._busName != value))
				{
					this.OnbusNameChanging(value);
					this.SendPropertyChanging();
					this._busName = value;
					this.SendPropertyChanged("busName");
					this.OnbusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route", DbType="VarChar(50)")]
		public string route
		{
			get
			{
				return this._route;
			}
			set
			{
				if ((this._route != value))
				{
					this.OnrouteChanging(value);
					this.SendPropertyChanging();
					this._route = value;
					this.SendPropertyChanged("route");
					this.OnrouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(50)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedual", DbType="VarChar(50)")]
		public string schedual
		{
			get
			{
				return this._schedual;
			}
			set
			{
				if ((this._schedual != value))
				{
					this.OnschedualChanging(value);
					this.SendPropertyChanging();
					this._schedual = value;
					this.SendPropertyChanged("schedual");
					this.OnschedualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1", DbType="VarChar(50)")]
		public string A1
		{
			get
			{
				return this._A1;
			}
			set
			{
				if ((this._A1 != value))
				{
					this.OnA1Changing(value);
					this.SendPropertyChanging();
					this._A1 = value;
					this.SendPropertyChanged("A1");
					this.OnA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2", DbType="VarChar(50)")]
		public string A2
		{
			get
			{
				return this._A2;
			}
			set
			{
				if ((this._A2 != value))
				{
					this.OnA2Changing(value);
					this.SendPropertyChanging();
					this._A2 = value;
					this.SendPropertyChanged("A2");
					this.OnA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A3", DbType="VarChar(50)")]
		public string A3
		{
			get
			{
				return this._A3;
			}
			set
			{
				if ((this._A3 != value))
				{
					this.OnA3Changing(value);
					this.SendPropertyChanging();
					this._A3 = value;
					this.SendPropertyChanged("A3");
					this.OnA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A4", DbType="VarChar(50)")]
		public string A4
		{
			get
			{
				return this._A4;
			}
			set
			{
				if ((this._A4 != value))
				{
					this.OnA4Changing(value);
					this.SendPropertyChanging();
					this._A4 = value;
					this.SendPropertyChanged("A4");
					this.OnA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B1", DbType="VarChar(50)")]
		public string B1
		{
			get
			{
				return this._B1;
			}
			set
			{
				if ((this._B1 != value))
				{
					this.OnB1Changing(value);
					this.SendPropertyChanging();
					this._B1 = value;
					this.SendPropertyChanged("B1");
					this.OnB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2", DbType="VarChar(50)")]
		public string B2
		{
			get
			{
				return this._B2;
			}
			set
			{
				if ((this._B2 != value))
				{
					this.OnB2Changing(value);
					this.SendPropertyChanging();
					this._B2 = value;
					this.SendPropertyChanged("B2");
					this.OnB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3", DbType="VarChar(50)")]
		public string B3
		{
			get
			{
				return this._B3;
			}
			set
			{
				if ((this._B3 != value))
				{
					this.OnB3Changing(value);
					this.SendPropertyChanging();
					this._B3 = value;
					this.SendPropertyChanged("B3");
					this.OnB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B4", DbType="VarChar(50)")]
		public string B4
		{
			get
			{
				return this._B4;
			}
			set
			{
				if ((this._B4 != value))
				{
					this.OnB4Changing(value);
					this.SendPropertyChanging();
					this._B4 = value;
					this.SendPropertyChanged("B4");
					this.OnB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C1", DbType="VarChar(50)")]
		public string C1
		{
			get
			{
				return this._C1;
			}
			set
			{
				if ((this._C1 != value))
				{
					this.OnC1Changing(value);
					this.SendPropertyChanging();
					this._C1 = value;
					this.SendPropertyChanged("C1");
					this.OnC1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C2", DbType="VarChar(50)")]
		public string C2
		{
			get
			{
				return this._C2;
			}
			set
			{
				if ((this._C2 != value))
				{
					this.OnC2Changing(value);
					this.SendPropertyChanging();
					this._C2 = value;
					this.SendPropertyChanged("C2");
					this.OnC2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C3", DbType="VarChar(50)")]
		public string C3
		{
			get
			{
				return this._C3;
			}
			set
			{
				if ((this._C3 != value))
				{
					this.OnC3Changing(value);
					this.SendPropertyChanging();
					this._C3 = value;
					this.SendPropertyChanged("C3");
					this.OnC3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C4", DbType="VarChar(50)")]
		public string C4
		{
			get
			{
				return this._C4;
			}
			set
			{
				if ((this._C4 != value))
				{
					this.OnC4Changing(value);
					this.SendPropertyChanging();
					this._C4 = value;
					this.SendPropertyChanged("C4");
					this.OnC4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D1", DbType="VarChar(50)")]
		public string D1
		{
			get
			{
				return this._D1;
			}
			set
			{
				if ((this._D1 != value))
				{
					this.OnD1Changing(value);
					this.SendPropertyChanging();
					this._D1 = value;
					this.SendPropertyChanged("D1");
					this.OnD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D2", DbType="VarChar(50)")]
		public string D2
		{
			get
			{
				return this._D2;
			}
			set
			{
				if ((this._D2 != value))
				{
					this.OnD2Changing(value);
					this.SendPropertyChanging();
					this._D2 = value;
					this.SendPropertyChanged("D2");
					this.OnD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D3", DbType="VarChar(50)")]
		public string D3
		{
			get
			{
				return this._D3;
			}
			set
			{
				if ((this._D3 != value))
				{
					this.OnD3Changing(value);
					this.SendPropertyChanging();
					this._D3 = value;
					this.SendPropertyChanged("D3");
					this.OnD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D4", DbType="VarChar(50)")]
		public string D4
		{
			get
			{
				return this._D4;
			}
			set
			{
				if ((this._D4 != value))
				{
					this.OnD4Changing(value);
					this.SendPropertyChanging();
					this._D4 = value;
					this.SendPropertyChanged("D4");
					this.OnD4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E1", DbType="VarChar(50)")]
		public string E1
		{
			get
			{
				return this._E1;
			}
			set
			{
				if ((this._E1 != value))
				{
					this.OnE1Changing(value);
					this.SendPropertyChanging();
					this._E1 = value;
					this.SendPropertyChanged("E1");
					this.OnE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E2", DbType="VarChar(50)")]
		public string E2
		{
			get
			{
				return this._E2;
			}
			set
			{
				if ((this._E2 != value))
				{
					this.OnE2Changing(value);
					this.SendPropertyChanging();
					this._E2 = value;
					this.SendPropertyChanged("E2");
					this.OnE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E3", DbType="VarChar(50)")]
		public string E3
		{
			get
			{
				return this._E3;
			}
			set
			{
				if ((this._E3 != value))
				{
					this.OnE3Changing(value);
					this.SendPropertyChanging();
					this._E3 = value;
					this.SendPropertyChanged("E3");
					this.OnE3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E4", DbType="VarChar(50)")]
		public string E4
		{
			get
			{
				return this._E4;
			}
			set
			{
				if ((this._E4 != value))
				{
					this.OnE4Changing(value);
					this.SendPropertyChanging();
					this._E4 = value;
					this.SendPropertyChanged("E4");
					this.OnE4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="VarChar(50)")]
		public string rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this.OnrentChanging(value);
					this.SendPropertyChanging();
					this._rent = value;
					this.SendPropertyChanged("rent");
					this.OnrentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
